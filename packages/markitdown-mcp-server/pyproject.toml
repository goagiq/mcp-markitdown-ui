[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "markitdown-mcp-server"
dynamic = ["version"]
description = "MCP server for MarkItDown file conversion tools"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = ["mcp", "markitdown", "file-conversion", "markdown"]
authors = [
  { name = "MarkItDown Team", email = "team@markitdown.dev" },
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Text Processing :: Markup",
  "Topic :: Utilities",
]
dependencies = [
  "mcp>=1.0.0",
  "fastapi-mcp>=0.4.0",
  "markitdown[all]>=0.1.3",
  "pydantic>=2.5.0",
  "fastapi>=0.104.0",
  "uvicorn[standard]>=0.24.0",
  "python-multipart>=0.0.6",
  "websockets>=12.0",
  "requests>=2.25.0",
  "aiofiles>=23.0.0",
  "python-magic>=0.4.27",
]

[project.optional-dependencies]
dev = [
  "pytest>=7.0.0",
  "pytest-asyncio>=0.21.0",
  "pytest-cov>=4.0.0",
  "httpx>=0.25.0",
  "black>=23.0.0",
  "isort>=5.12.0",
  "mypy>=1.0.0",
  "ruff>=0.1.0",
  "pre-commit>=3.0.0",
]

[project.urls]
Documentation = "https://github.com/microsoft/markitdown#readme"
Issues = "https://github.com/microsoft/markitdown/issues"
Source = "https://github.com/microsoft/markitdown"

[tool.hatch.version]
path = "src/markitdown_mcp_server/__about__.py"

[project.scripts]
markitdown-mcp = "markitdown_mcp_server.__main__:main"

[tool.hatch.envs.default]
features = ["dev"]

[tool.hatch.envs.test]
features = ["dev"]

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
  "--strict-markers",
  "--strict-config",
  "--cov=markitdown_mcp_server",
  "--cov-report=term-missing",
  "--cov-report=html",
  "--cov-report=xml",
]

[tool.coverage.run]
source = ["src/markitdown_mcp_server"]
omit = [
  "*/tests/*",
  "*/test_*",
  "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]
